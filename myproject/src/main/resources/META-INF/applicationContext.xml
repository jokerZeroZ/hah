<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
        
    <!-- **************************配置spring************************ -->
    <!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。  -->
    <context:component-scan base-package="erp.myproject">
        <!-- 扫描时跳过@Controller注解的Java类（控制器） -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- **************************配置hibernate************************ -->
    <!-- 扫描配置文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:META-INF/config.properties"/>
	
    <!-- 获取bean工具注入 
	<bean id="springContextHolder" class="erp.myproject.sys.utils.SpringContextHolder" lazy-init="false"/>
    -->
    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}"/>	<!-- 数据库连接驱动 -->
        <property name="jdbcUrl" value="${jdbc.url}"/>			<!-- 数据库地址 -->
        <property name="user" value="${jdbc.username}"/>		<!-- 用户名 -->
        <property name="password" value="${jdbc.password}"/>	<!-- 密码 -->
        <property name="maxPoolSize" value="40"/>				<!-- 最大连接数 -->
        <property name="minPoolSize" value="1"/>				<!-- 最小连接数 -->
        <property name="initialPoolSize" value="10"/>			<!-- 初始化连接池内的数据库连接 -->
        <property name="maxIdleTime" value="20"/>				<!-- 最大空闲时间 -->
    </bean>
    
    <!-- 配置session工厂 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="erp.myproject"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>	<!-- hibernate根据实体自动生成数据库表 -->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>			<!-- 指定数据库方言 -->
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>			<!-- 在控制台显示执行的数据库操作语句 -->
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>		<!-- 在控制台显示执行的数据库操作语句（格式） -->
                <!-- 配置二级缓存 
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>-->
                <!-- 开启查询缓存
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:META-INF/ehcache.xml</prop>-->
            </props>
        </property>
    </bean>
	
    <!-- 事物管理配置 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!-- property name="nestedTransactionAllowed" value="true"/> -->
    </bean>
    <!-- 开启事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
    <!-- 配置hibernateTemplate
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean> -->
</beans>
    	